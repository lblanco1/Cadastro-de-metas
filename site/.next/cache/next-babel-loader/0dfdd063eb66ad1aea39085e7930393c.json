{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\www\\\\celke\\\\semana_imersao_5\\\\site\\\\pages\\\\cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Menu from '../components/Menu';\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nfunction Cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  const onChangeInput = e => setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n    [e.target.name]: e.target.value\n  }));\n\n  const sendMeta = async e => {\n    e.preventDefault();\n    setResponse({\n      formSave: true\n    });\n\n    try {\n      const res = await fetch('http://localhost:8080/metas', {\n        method: 'POST',\n        body: JSON.stringify(meta),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const responseEnv = await res.json();\n\n      if (responseEnv.error) {\n        setResponse({\n          formSave: false,\n          type: 'error',\n          message: responseEnv.message\n        });\n      } else {\n        setResponse({\n          formSave: false,\n          type: 'success',\n          message: responseEnv.message\n        });\n      }\n    } catch (err) {\n      setResponse({\n        formSave: false,\n        type: 'error',\n        message: 'Erro: Meta n√£o cadastrada com sucesso, tente mais tarde!'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `.form{\n                        background-color: #171941;\n                        color: #bf38ac;\n                        padding-top: 30px;\n                        padding-bottom: 150px;\n                        margin-bottom: 0rem !important;\n                    }`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center\",\n          children: \"Cadastrar Minha Meta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"danger\",\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 50\n        }, this) : \"\", response.type === 'success' ? /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"success\",\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 52\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: sendMeta,\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Nome da meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"description\",\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              name: \"description\",\n              id: \"description\",\n              placeholder: \"Descri\\xE7\\xE3o da meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"status\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"status\",\n              id: \"status\",\n              placeholder: \"Status da meta\",\n              onChange: onChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), response.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"danger\",\n            disabled: true,\n            children: \"Enviando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            outline: true,\n            color: \"primary\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 115\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Cadastrar;","map":{"version":3,"sources":["C:/www/celke/semana_imersao_5/site/pages/cadastrar.js"],"names":["React","useState","Menu","Jumbotron","Container","Button","Form","FormGroup","Label","Input","Alert","Cadastrar","meta","setMeta","name","description","status","response","setResponse","formSave","type","message","onChangeInput","e","target","value","sendMeta","preventDefault","res","fetch","method","body","JSON","stringify","headers","responseEnv","json","error","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Menu from '../components/Menu';\r\n\r\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\r\n\r\nfunction Cadastrar() {\r\n\r\n    const [meta, setMeta] = useState({\r\n        name: '',\r\n        description: '',\r\n        status: ''\r\n    });\r\n\r\n    const [response, setResponse] = useState({\r\n        formSave: false,\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const onChangeInput = e => setMeta({ ...meta, [e.target.name]: e.target.value });\r\n\r\n    const sendMeta = async e => {\r\n        e.preventDefault();\r\n\r\n        setResponse({ formSave: true });\r\n\r\n        try {\r\n            const res = await fetch('http://localhost:8080/metas', {\r\n                method: 'POST',\r\n                body: JSON.stringify(meta),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n\r\n            const responseEnv = await res.json();\r\n\r\n            if (responseEnv.error) {\r\n                setResponse({\r\n                    formSave: false,\r\n                    type: 'error',\r\n                    message: responseEnv.message\r\n                });\r\n            } else {\r\n                setResponse({\r\n                    formSave: false,\r\n                    type: 'success',\r\n                    message: responseEnv.message\r\n                });\r\n            }\r\n        } catch (err) {\r\n            setResponse({\r\n                formSave: false,\r\n                type: 'error',\r\n                message: 'Erro: Meta n√£o cadastrada com sucesso, tente mais tarde!'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu />\r\n            <Jumbotron fluid className=\"form\">\r\n                <style>\r\n                    {`.form{\r\n                        background-color: #171941;\r\n                        color: #bf38ac;\r\n                        padding-top: 30px;\r\n                        padding-bottom: 150px;\r\n                        margin-bottom: 0rem !important;\r\n                    }`}\r\n                </style>\r\n                <Container>\r\n                    <h1 className=\"display-4 text-center\">Cadastrar Minha Meta</h1>\r\n                    <hr />\r\n\r\n                    {response.type === 'error' ? <Alert color=\"danger\">{response.message}</Alert > : \"\"}\r\n                    {response.type === 'success' ? <Alert color=\"success\">{response.message}</Alert > : \"\"}\r\n\r\n                    <Form onSubmit={sendMeta}>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"name\">Nome</Label>\r\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Nome da meta\" onChange={onChangeInput} />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Descri√ß√£o</Label>\r\n                            <Input type=\"textarea\" name=\"description\" id=\"description\" placeholder=\"Descri√ß√£o da meta\" onChange={onChangeInput} />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label for=\"status\">Status</Label>\r\n                            <Input type=\"text\" name=\"status\" id=\"status\" placeholder=\"Status da meta\" onChange={onChangeInput} />\r\n                        </FormGroup>\r\n\r\n\r\n                        {response.formSave ? <Button type=\"submit\" color=\"danger\" disabled>Enviando...</Button> : <Button type=\"submit\" outline color=\"primary\">Cadastrar</Button>}\r\n\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cadastrar;"]},"metadata":{},"sourceType":"module"}